==============================================================================
------------------------------------------------------------------------------
                                                           *M.on_input_submit()*
                          `M.on_input_submit`({value})
`on_input_submit` 関数は、ユーザーが入力を送信したときに呼び出される関数です。

Parameters ~
{value} `(string)` ユーザーによって入力された文字列。

------------------------------------------------------------------------------
                                                           *M.on_input_change()*
                          `M.on_input_change`({value})
`on_input_change` 関数は、ユーザーの入力が変更されるたびに呼び出される関数です。

Parameters ~
{value} `(string)` ユーザーによって入力された現在の文字列。

------------------------------------------------------------------------------
                                                              *M.get_progress()*
                               `M.get_progress`()
ゲームの進行状況を取得する関数
@return table any ゲームの進行状況を示すテーブル。
戻り値のテーブルのフィールド:
`current_line` (number): 現在の行番号。
`total_lines` (number): 全行数。
`completed` (boolean): ゲームが完了したかどうか。

------------------------------------------------------------------------------
                                                           *M.get_error_count()*
                             `M.get_error_count`()
`get_error_count` 関数は、ゲーム中のエラーの総数を返します。
Return ~
`(number)` ゲーム中に発生したエラーの総数。

------------------------------------------------------------------------------
                                                                *M.start_game()*
                          `M.start_game`({test_lines})
`start_game` 関数は、ゲームを開始するために呼び出されます。

Parameters ~
{test_lines} `(table|string)` テスト用の行またはコマンドライン引数。

------------------------------------------------------------------------------
                                                                 *M.get_score()*
                                `M.get_score`()
`get_score` 関数は、現在のスコアを取得します。

------------------------------------------------------------------------------
                                                                 *M.get_grade()*
                                `M.get_grade`()
`get_grade` 関数は、現在のグレードを取得します。


==============================================================================
------------------------------------------------------------------------------
`active_before_buffer` は、ゲーム終了後に元のバッファに戻るためのローカル関数です。

------------------------------------------------------------------------------
`calculate_game_duration` は、ゲームの所要時間を計算するローカル関数です。

------------------------------------------------------------------------------
`calculate_score` は、ゲームのスコアを計算するローカル関数です。

------------------------------------------------------------------------------
`init_game` 関数は、ゲームを初期化し、開始状態に設定します。

------------------------------------------------------------------------------
`process_input` 関数は、ユーザーの入力を処理し、それが正しいかどうかを判定します。

------------------------------------------------------------------------------
                                                 *M.increment_keystroke_count()*
                        `M.increment_keystroke_count`()
`increment_keystroke_count` 関数は、キーストロークのカウントを1増やします。

------------------------------------------------------------------------------
`is_game_over` 関数は、ゲームが終了しているかどうかを判定します。

------------------------------------------------------------------------------
                                                *M.increment_char_error_count()*
                        `M.increment_char_error_count`()
`increment_char_error_count` 関数は、文字入力エラーのカウントを1増やします。

------------------------------------------------------------------------------
`get_current_highlighted_line` 関数は、指定された行番号のテキスト行を取得します。

------------------------------------------------------------------------------
`get_keystroke_count` 関数は、現在のキーストロークカウントを返します。

------------------------------------------------------------------------------
`set_keystroke_count` 関数は、キーストロークカウントを指定した値に設定します。

------------------------------------------------------------------------------
`get_registered_words` 関数は、ゲームで使用されるテキスト行の配列を返します。

------------------------------------------------------------------------------
`get_game_lines_length` 関数は、ゲームで使用されるテキスト行の総数を返します。

------------------------------------------------------------------------------
`get_game_lines_length` 関数は、ゲームで使用されるテキスト行の総数を返します。

------------------------------------------------------------------------------
`get_current_line` 関数は、現在の行番号を返します。

------------------------------------------------------------------------------
`get_error_count` 関数は、エラーの総数を返します。


==============================================================================
------------------------------------------------------------------------------
`calculate_popup_position` は、ポップアップの位置を計算するローカル関数です。

------------------------------------------------------------------------------
`show_input_popup` 関数は、入力を受け付けるポップアップを表示します。

------------------------------------------------------------------------------
`show_text_popup` 関数は、テキストを表示するポップアップを作成し、表示します。

------------------------------------------------------------------------------
`show_counter` 関数は、カウンターを表示するポップアップを作成し、表示します。

------------------------------------------------------------------------------
`update_counter_display` 関数は、カウンターの表示を更新します。


 vim:tw=78:ts=8:noet:ft=help:norl: